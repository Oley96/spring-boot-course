plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'it.oleynik'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '17'


jib {
    var tag = 'latest'
    from {
        image = 'eclipse-temurin:17'
        platforms {
            platform {
                os = 'linux'
                architecture = 'amd64'
            }
        }
    }
    to {
        image = "$dockerUser/${rootProject.name}:$version"
        tags = [version, tag]
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.github.javafaker:javafaker:1.0.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation "org.testcontainers:testcontainers:1.18.0"
    testImplementation "org.testcontainers:junit-jupiter:1.18.0"
    testImplementation "org.testcontainers:postgresql:1.18.0"
}


test {
    useJUnitPlatform()
}

